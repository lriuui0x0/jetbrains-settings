<application>
  <component name="VimEditorSettings">
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>SECOND</entry>
        <entry encoding="base64">XDxTRUNPTkRBUllfUFJPTVBUX1BBVFRFUk5cPg==</entry>
        <entry>query</entry>
        <entry encoding="base64">XDxhYnN0cmFjdFw+</entry>
        <entry encoding="base64">XDxHcmFrbkNsaWVudEV4Y2VwdGlvblw+</entry>
        <entry encoding="base64">XDxleHRlbmRzXD4=</entry>
        <entry encoding="base64">XDxSZXBsQ29tbWFuZFw+</entry>
        <entry>Exit</entry>
        <entry>Clear</entry>
        <entry>commit(</entry>
        <entry encoding="base64">XDxjYWNoZVw+</entry>
        <entry encoding="base64">XDxwcm9kdWNlcnNcPg==</entry>
        <entry>Commit</entry>
        <entry encoding="base64">XDx2ZXJ0ZXhcPg==</entry>
        <entry encoding="base64">XDxzdGF0aXN0aWNzXD4=</entry>
        <entry>isModified</entry>
        <entry encoding="base64">XDxpc01vZGlmaWVkXD4=</entry>
        <entry>commit</entry>
        <entry>put(</entry>
        <entry>validate</entry>
      </history-search>
      <history-cmd>
        <entry>wwwll:w</entry>
        <entry>q:q</entry>
        <entry>w]</entry>
        <entry>s</entry>
        <entry>ww:w</entry>
        <entry>vs</entry>
        <entry>.w</entry>
        <entry>we</entry>
        <entry>wq</entry>
        <entry>cnext</entry>
        <entry>ww</entry>
        <entry>qq</entry>
        <entry>w\</entry>
        <entry encoding="base64">JzwsJz53</entry>
        <entry>W</entry>
        <entry encoding="base64">JzwsJz4=</entry>
        <entry>:w</entry>
        <entry>:q</entry>
        <entry>q</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 6</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed SEMICOLON</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift ctrl pressed SEMICOLON</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed BACK_SPACE</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed Z</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed COMMA</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>alt pressed L</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/GraknLabs/grakn/graph/adjacency/impl/ThingAdjacencyImpl.java" timestamp="1611054212296">
        <mark key="'" line="207" column="25" />
        <mark key="[" line="151" column="30" />
        <mark key="]" line="151" column="30" />
        <mark key="." line="151" column="30" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/graph/DataGraph.java" timestamp="1611054558496">
        <mark key="'" line="274" column="8" />
        <mark key="[" line="451" column="50" />
        <mark key="m" line="441" column="0" />
        <mark key="]" line="451" column="49" />
        <mark key="." line="451" column="48" />
        <mark key="^" line="451" column="49" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/graph/BUILD" timestamp="1611050343759">
        <mark key="[" line="43" column="38" />
        <mark key="]" line="43" column="39" />
        <mark key="." line="43" column="38" />
        <mark key="^" line="43" column="39" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/concept/thing/impl/RelationImpl.java" timestamp="1611066550940">
        <mark key="'" line="81" column="0" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/rocks/RocksTransaction.java" timestamp="1610986472858">
        <mark key="'" line="319" column="113" />
        <mark key="[" line="319" column="110" />
        <mark key="]" line="319" column="111" />
        <mark key="." line="319" column="111" />
        <mark key="^" line="319" column="62" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/concept/thing/impl/AttributeImpl.java" timestamp="1611066560222">
        <mark key="'" line="64" column="8" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/graph/edge/impl/ThingEdgeImpl.java" timestamp="1611054523463">
        <mark key="'" line="172" column="32" />
        <mark key="[" line="171" column="0" />
        <mark key="]" line="171" column="36" />
        <mark key="^" line="169" column="36" />
        <mark key="." line="171" column="0" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/query/Inserter.java" timestamp="1611065886627">
        <mark key="'" line="102" column="14" />
        <mark key="[" line="140" column="0" />
        <mark key="]" line="140" column="97" />
        <mark key="." line="140" column="0" />
        <mark key="^" line="152" column="90" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/server/rpc/query/QueryHandler.java" timestamp="1611056841084">
        <mark key="'" line="139" column="17" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/graph/vertex/impl/ThingVertexImpl.java" timestamp="1611054450876">
        <mark key="'" line="178" column="20" />
        <mark key="[" line="185" column="0" />
        <mark key="]" line="185" column="32" />
        <mark key="." line="187" column="0" />
        <mark key="^" line="185" column="32" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/reasoner/BUILD" timestamp="1611050333110">
        <mark key="[" line="57" column="0" />
        <mark key="]" line="57" column="38" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/query/QueryManager.java" timestamp="1611065590230">
        <mark key="'" line="161" column="23" />
        <mark key="[" line="49" column="0" />
        <mark key="]" line="50" column="0" />
        <mark key="^" line="163" column="27" />
        <mark key="." line="163" column="26" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/logic/tool/TypeResolver.java" timestamp="1610991565391">
        <mark key="'" line="71" column="47" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/rocks/BUILD" timestamp="1610981999620">
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="39" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/concept/ConceptManager.java" timestamp="1611066502821">
        <mark key="'" line="178" column="86" />
      </file>
      <file name="vim_settings.xml" timestamp="1611056075828">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/concept/thing/impl/ThingImpl.java" timestamp="1611066739462">
        <mark key="'" line="205" column="76" />
      </file>
      <file name="$USER_HOME$/GraknLabs/grakn/traversal/planner/GraphPlanner.java" timestamp="1610991832536" />
      <file name="/fragment.java" timestamp="1611057799074">
        <mark key="'" line="0" column="7" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="68" />
        <mark key="^" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="205" column="28" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="224" column="10" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="220" column="10" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="218" column="10" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="207" column="19" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="209" column="19" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="211" column="10" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="213" column="10" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="215" column="10" filename="/private/var/tmp/_bazel_lriuui0x0/cc84a188dd01b277d4e8abad1fc1ebf5/external/maven/v1/https/repo1.maven.org/maven2/org/rocksdb/rocksdbjni/6.11.4/rocksdbjni-6.11.4-sources.jar!/org/rocksdb/OptimisticTransactionDB.java" />
      <jump line="34" column="44" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="207" column="55" filename="$USER_HOME$/GraknLabs/grakn/rocks/RocksStorage.java" />
      <jump line="214" column="8" filename="$USER_HOME$/GraknLabs/grakn/rocks/RocksStorage.java" />
      <jump line="52" column="67" filename="$USER_HOME$/GraknLabs/grakn/rocks/RocksStorage.java" />
      <jump line="63" column="8" filename="$USER_HOME$/GraknLabs/grakn/rocks/RocksStorage.java" />
      <jump line="192" column="12" filename="$USER_HOME$/GraknLabs/grakn/rocks/RocksStorage.java" />
      <jump line="81" column="4" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="79" column="26" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="67" column="4" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="22" column="0" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="87" column="69" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="128" column="48" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="21" column="49" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="43" column="33" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="46" column="37" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="74" column="17" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="64" column="46" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="94" column="103" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="61" column="46" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="76" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="49" column="124" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="69" column="15" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="70" column="28" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="73" column="19" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="77" column="15" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="80" column="65" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="117" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="118" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="85" column="93" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="86" column="16" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="84" column="52" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="116" column="4" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="104" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="110" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="103" column="70" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="111" column="41" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="115" column="38" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="66" column="4" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="97" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="38" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="60" column="13" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="93" column="32" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="62" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="47" column="37" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="67" column="31" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="75" column="17" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="83" column="49" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="89" column="69" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="123" column="23" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="40" column="0" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="72" column="0" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="25" column="64" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="64" column="0" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="2" column="1" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="65" column="0" filename="$USER_HOME$/GraknLabs/grakn/common/iterator/DistinctIterator.java" />
      <jump line="22" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="2" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="125" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="37" column="58" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="42" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="0" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="114" column="59" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="95" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="92" column="39" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="96" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="101" column="72" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="88" column="92" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="98" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="48" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="99" column="39" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="106" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="105" column="16" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="107" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="102" column="25" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="109" column="12" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="112" column="0" filename="$USER_HOME$/GraknLabs/grakn/traversal/producer/GraphProducer.java" />
      <jump line="76" column="38" filename="$USER_HOME$/GraknLabs/console/GraknConsole.java" />
      <jump line="52" column="38" filename="$USER_HOME$/GraknLabs/grakn/test/integration/traversal/TraversalTest.java" />
      <jump line="51" column="95" filename="$USER_HOME$/GraknLabs/grakn/test/integration/traversal/TraversalTest.java" />
      <jump line="151" column="0" filename="$USER_HOME$/GraknLabs/grakn/test/integration/traversal/TraversalTest.java" />
      <jump line="55" column="10" filename="$USER_HOME$/GraknLabs/grakn/test/integration/traversal/TraversalTest.java" />
      <jump line="58" column="0" filename="$USER_HOME$/GraknLabs/grakn/test/integration/traversal/TraversalTest.java" />
      <jump line="139" column="17" filename="$USER_HOME$/GraknLabs/grakn/server/rpc/query/QueryHandler.java" />
      <jump line="159" column="48" filename="$USER_HOME$/GraknLabs/grakn/query/QueryManager.java" />
      <jump line="163" column="27" filename="$USER_HOME$/GraknLabs/grakn/query/QueryManager.java" />
      <jump line="161" column="23" filename="$USER_HOME$/GraknLabs/grakn/query/QueryManager.java" />
      <jump line="99" column="14" filename="$USER_HOME$/GraknLabs/grakn/query/Inserter.java" />
      <jump line="178" column="86" filename="$USER_HOME$/GraknLabs/grakn/concept/ConceptManager.java" />
      <jump line="81" column="0" filename="$USER_HOME$/GraknLabs/grakn/concept/thing/impl/RelationImpl.java" />
      <jump line="64" column="8" filename="$USER_HOME$/GraknLabs/grakn/concept/thing/impl/AttributeImpl.java" />
      <jump line="205" column="76" filename="$USER_HOME$/GraknLabs/grakn/concept/thing/impl/ThingImpl.java" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgICAgICAgICAgTE9HLmRlYnVnKCJGaW5pc2hlZCBpbnNlcnRpbmcgdmFyaWFibGUgIiArIChTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSAtIHRpbWUxKSk7Cg==</text>
      </register>
      <register name="f" type="4">
        <text>_</text>
      </register>
      <register name="+" type="8">
        <text>((RocksTransaction.Data) transactionRPC.transaction).graphMgr.data()</text>
      </register>
      <register name="l" type="4">
        <text />
      </register>
      <register name="-" type="4">
        <text>.</text>
      </register>
      <register name="/" type="4">
        <text>validate</text>
      </register>
      <register name="o" type="4">
        <keys>
          <key char="65535" code="91" mods="130" />
        </keys>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAgICAgTE9HLmRlYnVnKCJGaW5pc2hlZCBpbnNlcnRpbmcgdmFyaWFibGUgIiArIChTeXN0ZW0uY3VycmVudFRpbWVNaWxsaXMoKSAtIHRpbWUxKSk7Cg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAgICAgCiAgICAgICAgICAgIExPRy4K</text>
      </register>
      <register name="q" type="4">
        <keys>
          <key char="102" code="0" mods="0" />
          <key char="95" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="58" code="0" mods="0" />
          <key char="65535" code="91" mods="130" />
          <key char="94" code="0" mods="0" />
          <key char="106" code="0" mods="0" />
        </keys>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCk7Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAgICAgYXMK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgIHByaXZhdGUgc3RhdGljIGdyYWtuOwo=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgIEBCZWZvcmUKICAgIHB1YmxpYyB2b2lkIHNldFVwKCkgdGhyb3dzIElPRXhjZXB0aW9uIHsKICAgIH0KCiAgICBAQWZ0ZXIKICAgIHB1YmxpYyB2b2lkIHRlYXJEb3duKCkgewogICAgICAgIGdyYWtuLmNsb3NlKCk7CiAgICB9Cgo=</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICBVdGlsLnJlc2V0RGlyZWN0b3J5KGRpcmVjdG9yeSk7CiAgICAgICAgZ3Jha24gPSBSb2Nrc0dyYWtuLm9wZW4oZGlyZWN0b3J5KTsKICAgICAgICBncmFrbi5kYXRhYmFzZXMoKS5jcmVhdGUoZGF0YWJhc2UpOwo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgIHByaXZhdGUgc3RhdGljIFJvY2tzR3Jha24gZ3Jha247Cg==</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search>validate</last-search>
      <last-offset />
      <last-pattern>validate</last-pattern>
      <last-replace>~</last-replace>
      <last-substitute encoding="base64">XDxzbmFwc2hvdFw+</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>